server:
  port: 8680

spring:
  application:
    name: finance-service
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  datasource:
    url: jdbc:postgresql://localhost:25432/loga
    username: loga
    password: Log@2024
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
  jackson:
    serialization:
      fail-on-empty-beans: false
  config:
    import: optional:configserver:http://localhost:8888

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - health
  endpoint:
    health:
      show-details: always

  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    web: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      authentication-service:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
  retry:
    instances:
      authentication-service:
        maxAttempts: 5
        waitDuration: 10s
        enableExponentialBackoff: true
  ratelimiter:
    instances:
      authentication-service:
        limitForPeriod: 10
        limitRefreshPeriod: 10s
        timeoutDuration: 3s
  bulkhead:
    instances:
      authentication-service:
        maxConcurrentCalls: 10
        maxWaitDuration: 10s